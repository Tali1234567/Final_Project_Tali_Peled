<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="22" passed="15" failed="7" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-23T21:38:15 IDT" name="Default suite" finished-at="2022-07-23T21:39:20 IDT" duration-ms="65146">
    <groups>
    </groups>
    <test started-at="2022-07-23T21:38:15 IDT" name="Default test" finished-at="2022-07-23T21:39:20 IDT" duration-ms="65146">
      <class name="tests.EmailValidationTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:15 IDT" name="setup" finished-at="2022-07-23T21:38:41 IDT" duration-ms="25588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:41 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:43 IDT" duration-ms="2219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.co.il]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:44 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:45 IDT" duration-ms="1791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:45 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:47 IDT" duration-ms="1756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.org]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:47 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:49 IDT" duration-ms="1695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.edu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:49 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:51 IDT" duration-ms="1643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.gov]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:51 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:52 IDT" duration-ms="1702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname.lastname@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:52 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:54 IDT" duration-ms="1717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:54 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:56 IDT" duration-ms="1640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:56 IDT" name="tc01_checkValidEmailField" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-07-23T21:38:57 IDT" duration-ms="1676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname-lastname@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:57 IDT" name="tc02_checkInvalidEmailField" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-07-23T21:38:59 IDT" duration-ms="1629" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[.email@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please enter an email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please enter an email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:38:59 IDT" name="tc02_checkInvalidEmailField" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-07-23T21:39:01 IDT" duration-ms="1679" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[email.@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please enter an email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please enter an email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:01 IDT" name="tc02_checkInvalidEmailField" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-07-23T21:39:02 IDT" duration-ms="1651" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[email..email@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please enter an email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please enter an email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:02 IDT" name="tc02_checkInvalidEmailField" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-07-23T21:39:04 IDT" duration-ms="1599" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[_______@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please enter an email address.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please enter an email address.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method signature="tc03_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:04 IDT" name="tc03_checkInvalidEmailField" description="A Negative test - an email address with missing &quot;@&quot; sign and domain" finished-at="2022-07-23T21:39:06 IDT" duration-ms="1591" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please include an '@' in the email address. 'example' is missing  an '@'.] but found [Please enter an email address.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please include an '@' in the email address. 'example' is missing  an '@'.] but found [Please enter an email address.]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc03_checkInvalidEmailField(EmailValidationTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc03_checkInvalidEmailField -->
        <test-method signature="tc04_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:06 IDT" name="tc04_checkInvalidEmailField" description="A Negative test - an email address which contains quotes around the email" finished-at="2022-07-23T21:39:07 IDT" duration-ms="1662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc04_checkInvalidEmailField -->
        <test-method signature="tc05_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:07 IDT" name="tc05_checkInvalidEmailField" description="A Negative test - an email address which contains quotes around the email" finished-at="2022-07-23T21:39:09 IDT" duration-ms="1661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc05_checkInvalidEmailField -->
        <test-method signature="tc06_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:09 IDT" name="tc06_checkInvalidEmailField" description="A Negative test - an email address which contains a missing username" finished-at="2022-07-23T21:39:11 IDT" duration-ms="1643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc06_checkInvalidEmailField -->
        <test-method signature="tc07_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:11 IDT" name="tc07_checkInvalidEmailField" description="A Negative test - an email address which contains a missing &#039;@&#039; sign" finished-at="2022-07-23T21:39:12 IDT" duration-ms="1585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc07_checkInvalidEmailField -->
        <test-method signature="tc08_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:12 IDT" name="tc08_checkInvalidEmailField" description="A Negative test - an email address which contains two &#039;@&#039; signs" finished-at="2022-07-23T21:39:14 IDT" duration-ms="1674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc08_checkInvalidEmailField -->
        <test-method signature="tc09_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:14 IDT" name="tc09_checkInvalidEmailField" description="A Negative test - an email address which contains a missing top-level domain" finished-at="2022-07-23T21:39:16 IDT" duration-ms="1612" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please include a top level domain in the email address. email@example is missing a top level domain.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please include a top level domain in the email address. email@example is missing a top level domain.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc09_checkInvalidEmailField(EmailValidationTest.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc09_checkInvalidEmailField -->
        <test-method signature="tc10_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:16 IDT" name="tc10_checkInvalidEmailField" description="A Negative test - an email address which contains .web" finished-at="2022-07-23T21:39:17 IDT" duration-ms="1658" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part following '@' should not contain .web.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part following '@' should not contain .web.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc10_checkInvalidEmailField(EmailValidationTest.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc10_checkInvalidEmailField -->
        <test-method signature="tc11_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:17 IDT" name="tc11_checkInvalidEmailField" description="A Negative test - " finished-at="2022-07-23T21:39:19 IDT" duration-ms="1632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc11_checkInvalidEmailField -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.EmailValidationTest@507d20bb]" started-at="2022-07-23T21:39:19 IDT" name="tearDown" finished-at="2022-07-23T21:39:20 IDT" duration-ms="1466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.EmailValidationTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
