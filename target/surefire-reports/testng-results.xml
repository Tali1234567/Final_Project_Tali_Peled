<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="31" passed="25">
  <reporter-output>
  </reporter-output>
  <suite name="Testing Involve web" duration-ms="289847" started-at="2022-08-03T19:46:47 IDT" finished-at="2022-08-03T19:51:37 IDT">
    <groups>
    </groups>
    <test name="Test" duration-ms="289847" started-at="2022-08-03T19:46:47 IDT" finished-at="2022-08-03T19:51:37 IDT">
      <class name="tests.SearchingATemplateTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.SearchingATemplateTest@3deb2326]" name="setup" is-config="true" duration-ms="16104" started-at="2022-08-03T19:48:18 IDT" finished-at="2022-08-03T19:48:35 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupLogin()[pri:0, instance:tests.SearchingATemplateTest@3deb2326]" name="setupLogin" is-config="true" duration-ms="4926" started-at="2022-08-03T19:48:35 IDT" finished-at="2022-08-03T19:48:39 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method status="PASS" signature="tc01_searchTest()[pri:0, instance:tests.SearchingATemplateTest@3deb2326]" name="tc01_searchTest" duration-ms="7844" started-at="2022-08-03T19:48:39 IDT" description="Check the search function" finished-at="2022-08-03T19:48:47 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_searchTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.SearchingATemplateTest@3deb2326]" name="tearDown" is-config="true" duration-ms="1341" started-at="2022-08-03T19:48:47 IDT" finished-at="2022-08-03T19:48:49 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchingATemplateTest -->
      <class name="tests.LoginFailedTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.LoginFailedTest@3670f00]" name="setup" is-config="true" duration-ms="25127" started-at="2022-08-03T19:46:47 IDT" finished-at="2022-08-03T19:47:13 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tc01_loginFaliure(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tc01_loginFaliure" duration-ms="2859" started-at="2022-08-03T19:47:13 IDT" description="Check login failure" data-provider="getData_01" finished-at="2022-08-03T19:47:15 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[test.ta715@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456789]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_loginFaliure -->
        <test-method status="PASS" signature="tc01_loginFaliure(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tc01_loginFaliure" duration-ms="2328" started-at="2022-08-03T19:47:16 IDT" description="Check login failure" data-provider="getData_01" finished-at="2022-08-03T19:47:18 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[testypta715@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1234@%MN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_loginFaliure -->
        <test-method status="PASS" signature="tc02_loginFaliurer(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tc02_loginFaliurer" duration-ms="1664" started-at="2022-08-03T19:47:18 IDT" description="Check login failure" data-provider="getData_02" finished-at="2022-08-03T19:47:20 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1234@%MN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_loginFaliurer -->
        <test-method status="PASS" signature="tc02_loginFaliurer(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tc02_loginFaliurer" duration-ms="1629" started-at="2022-08-03T19:47:20 IDT" description="Check login failure" data-provider="getData_02" finished-at="2022-08-03T19:47:21 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ test1234@%MN]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_loginFaliurer -->
        <test-method status="PASS" signature="tc03_loginFailed()[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tc03_loginFailed" duration-ms="1613" started-at="2022-08-03T19:47:21 IDT" description="Check login failure" finished-at="2022-08-03T19:47:23 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc03_loginFailed -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.LoginFailedTest@3670f00]" name="tearDown" is-config="true" duration-ms="1884" started-at="2022-08-03T19:47:23 IDT" finished-at="2022-08-03T19:47:25 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginFailedTest -->
      <class name="tests.OrderingAClosetTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.OrderingAClosetTest@7889a1ac]" name="setup" is-config="true" duration-ms="17502" started-at="2022-08-03T19:50:04 IDT" finished-at="2022-08-03T19:50:21 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupLogin()[pri:0, instance:tests.OrderingAClosetTest@7889a1ac]" name="setupLogin" is-config="true" duration-ms="4418" started-at="2022-08-03T19:50:21 IDT" finished-at="2022-08-03T19:50:26 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method status="PASS" signature="tc01_OrderingAClosetTest()[pri:0, instance:tests.OrderingAClosetTest@7889a1ac]" name="tc01_OrderingAClosetTest" duration-ms="70054" started-at="2022-08-03T19:50:26 IDT" description="Check end to end ordering process" finished-at="2022-08-03T19:51:36 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_OrderingAClosetTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.OrderingAClosetTest@7889a1ac]" name="tearDown" is-config="true" duration-ms="1456" started-at="2022-08-03T19:51:36 IDT" finished-at="2022-08-03T19:51:37 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.OrderingAClosetTest -->
      <class name="tests.ClosetSizesFieldsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.ClosetSizesFieldsTest@62d363ab]" name="setup" is-config="true" duration-ms="17757" started-at="2022-08-03T19:48:49 IDT" finished-at="2022-08-03T19:49:06 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupLogin()[pri:0, instance:tests.ClosetSizesFieldsTest@62d363ab]" name="setupLogin" is-config="true" duration-ms="4539" started-at="2022-08-03T19:49:06 IDT" finished-at="2022-08-03T19:49:11 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method status="PASS" signature="tc01_SizesFieldsTest()[pri:0, instance:tests.ClosetSizesFieldsTest@62d363ab]" name="tc01_SizesFieldsTest" duration-ms="42728" started-at="2022-08-03T19:49:11 IDT" description="Check letters in the sizes fields" finished-at="2022-08-03T19:49:54 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_SizesFieldsTest -->
        <test-method status="PASS" signature="tc02_SizesFieldsTest()[pri:0, instance:tests.ClosetSizesFieldsTest@62d363ab]" name="tc02_SizesFieldsTest" duration-ms="8506" started-at="2022-08-03T19:49:54 IDT" description="Check characters in the sizes fields" finished-at="2022-08-03T19:50:02 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_SizesFieldsTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.ClosetSizesFieldsTest@62d363ab]" name="tearDown" is-config="true" duration-ms="1526" started-at="2022-08-03T19:50:02 IDT" finished-at="2022-08-03T19:50:04 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ClosetSizesFieldsTest -->
      <class name="tests.EmailValidationTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="setup" is-config="true" duration-ms="17579" started-at="2022-08-03T19:47:25 IDT" finished-at="2022-08-03T19:47:43 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1858" started-at="2022-08-03T19:47:43 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:44 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.co.il]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1593" started-at="2022-08-03T19:47:44 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:46 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.net]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1551" started-at="2022-08-03T19:47:46 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:48 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.org]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1596" started-at="2022-08-03T19:47:48 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:49 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.edu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1577" started-at="2022-08-03T19:47:49 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:51 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.gov]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1574" started-at="2022-08-03T19:47:51 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:52 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname.lastname@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1566" started-at="2022-08-03T19:47:52 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:54 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1569" started-at="2022-08-03T19:47:54 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:55 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email@example.name]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="PASS" signature="tc01_checkValidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc01_checkValidEmailField" duration-ms="1560" started-at="2022-08-03T19:47:55 IDT" description="Positive tests for checking Email field" data-provider="getData_01" finished-at="2022-08-03T19:47:57 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname-lastname@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc01_checkValidEmailField -->
        <test-method status="FAIL" signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc02_checkInvalidEmailField" duration-ms="1603" started-at="2022-08-03T19:47:57 IDT" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-08-03T19:47:59 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[.email@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part followed by '@' should not contain a dot.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part followed by '@' should not contain a dot.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method status="FAIL" signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc02_checkInvalidEmailField" duration-ms="1561" started-at="2022-08-03T19:47:59 IDT" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-08-03T19:48:00 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email.@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part followed by '@' should not contain a dot.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part followed by '@' should not contain a dot.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method status="FAIL" signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc02_checkInvalidEmailField" duration-ms="1574" started-at="2022-08-03T19:48:00 IDT" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-08-03T19:48:02 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[email..email@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part followed by '@' should not contain a dot.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part followed by '@' should not contain a dot.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method status="FAIL" signature="tc02_checkInvalidEmailField(java.lang.String,java.lang.String)[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc02_checkInvalidEmailField" duration-ms="1547" started-at="2022-08-03T19:48:02 IDT" description="Negative tests for checking Email field" data-provider="getData_02" finished-at="2022-08-03T19:48:03 IDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[_______@example.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part followed by '@' should not contain a dot.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part followed by '@' should not contain a dot.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc02_checkInvalidEmailField(EmailValidationTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc02_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc03_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc03_checkInvalidEmailField" duration-ms="1502" started-at="2022-08-03T19:48:03 IDT" description="A Negative test - an email address with missing &quot;@&quot; sign and domain" finished-at="2022-08-03T19:48:05 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc03_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc04_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc04_checkInvalidEmailField" duration-ms="1511" started-at="2022-08-03T19:48:05 IDT" description="A Negative test - an email address which contains quotes around the email" finished-at="2022-08-03T19:48:06 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc04_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc05_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc05_checkInvalidEmailField" duration-ms="1488" started-at="2022-08-03T19:48:06 IDT" description="A Negative test - an email address which contains quotes around the email" finished-at="2022-08-03T19:48:08 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc05_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc06_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc06_checkInvalidEmailField" duration-ms="1510" started-at="2022-08-03T19:48:08 IDT" description="A Negative test - an email address which contains a missing username" finished-at="2022-08-03T19:48:09 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc06_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc07_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc07_checkInvalidEmailField" duration-ms="1503" started-at="2022-08-03T19:48:09 IDT" description="A Negative test - an email address which contains a missing &#039;@&#039; sign" finished-at="2022-08-03T19:48:11 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc07_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc08_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc08_checkInvalidEmailField" duration-ms="1519" started-at="2022-08-03T19:48:11 IDT" description="A Negative test - an email address which contains two &#039;@&#039; signs" finished-at="2022-08-03T19:48:12 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc08_checkInvalidEmailField -->
        <test-method status="FAIL" signature="tc09_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc09_checkInvalidEmailField" duration-ms="1512" started-at="2022-08-03T19:48:12 IDT" description="A Negative test - an email address which contains a missing top-level domain" finished-at="2022-08-03T19:48:14 IDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please include a top level domain in the email address. email@example is missing a top level domain.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please include a top level domain in the email address. email@example is missing a top level domain.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc09_checkInvalidEmailField(EmailValidationTest.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc09_checkInvalidEmailField -->
        <test-method status="FAIL" signature="tc10_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc10_checkInvalidEmailField" duration-ms="1553" started-at="2022-08-03T19:48:14 IDT" description="A Negative test - an email address which contains .web" finished-at="2022-08-03T19:48:15 IDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [A part following '@' should not contain .web.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [A part following '@' should not contain .web.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at tests.EmailValidationTest.tc10_checkInvalidEmailField(EmailValidationTest.java:116)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc10_checkInvalidEmailField -->
        <test-method status="PASS" signature="tc11_checkInvalidEmailField()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tc11_checkInvalidEmailField" duration-ms="1494" started-at="2022-08-03T19:48:15 IDT" description="A Negative test - " finished-at="2022-08-03T19:48:17 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tc11_checkInvalidEmailField -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.EmailValidationTest@733c423e]" name="tearDown" is-config="true" duration-ms="1526" started-at="2022-08-03T19:48:17 IDT" finished-at="2022-08-03T19:48:18 IDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.EmailValidationTest -->
    </test> <!-- Test -->
  </suite> <!-- Testing Involve web -->
</testng-results>
